{"version":3,"sources":["../../src/bootstrap/index.js"],"names":["_","require","slash","fs","md5File","crypto","del","path","Promise","telemetry","apiRunnerNode","store","emitter","loadPlugins","loadThemes","reporter","tracer","globalTracer","process","on","reason","p","panic","extractQueries","requiresWriter","module","exports","args","spanArgs","parentSpan","childOf","bootstrapSpan","startSpan","setStore","directory","program","browserslist","dispatch","type","payload","activityForJobs","phantomActivity","start","onEndJob","getState","jobs","active","length","end","activity","activityTimer","configModule","configFilePath","config","id","context","configName","__experimentalThemes","warn","themes","useLegacyThemes","rootDir","plugins","polyfill","internalActions","setSiteConfig","flattenedPlugins","pluginsStr","uniq","map","name","version","decorateEvent","span","env","GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES","NODE_ENV","pluginVersions","hashes","all","resolve","catch","pluginsHash","createHash","update","JSON","stringify","concat","digest","state","oldPluginsHash","status","PLUGINS_HASH","info","stripIndent","cacheDirectory","remove","emptyDir","e","error","ensureDir","srcDir","__dirname","siteDir","tryRequire","copy","clobber","ensureDirSync","err","hasAPIFile","plugin","skipSSR","undefined","envAPIs","join","Array","isArray","ssrPlugins","filter","options","pluginOptions","browserPlugins","browserPluginsRequires","relativePluginPath","relative","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","default","verbose","nodes","size","nodesByType","entries","build","extensions","apiResults","traceId","flattenDeep","graphqlRunner","graphql","waitForCascadingActions","get","rebuildWithSitePage","writeAll","log","uptime","toFixed","emit","boundActionCreators","setProgramStatus","finish"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst _ = require(`lodash`)\nconst { slash } = require(`gatsby-core-utils`)\nconst fs = require(`fs-extra`)\nconst md5File = require(`md5-file/promise`)\nconst crypto = require(`crypto`)\nconst del = require(`del`)\nconst path = require(`path`)\nconst Promise = require(`bluebird`)\nconst telemetry = require(`gatsby-telemetry`)\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nimport { getBrowsersList } from \"../utils/browserslist\"\nimport { createSchemaCustomization } from \"../utils/create-schema-customization\"\nimport { startPluginRunner } from \"../redux/plugin-runner\"\nconst { store, emitter } = require(`../redux`)\nimport { internalActions } from \"../redux/actions\"\nconst loadPlugins = require(`./load-plugins`)\nconst loadThemes = require(`./load-themes`)\nconst reporter = require(`gatsby-cli/lib/reporter`)\nimport { getConfigFile } from \"./get-config-file\"\nconst tracer = require(`opentracing`).globalTracer()\nimport { preferDefault } from \"./prefer-default\"\nimport { removeStaleJobs } from \"./remove-stale-jobs\"\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason, p) => {\n  reporter.panic(reason)\n})\n\nimport { createGraphQLRunner } from \"./create-graphql-runner\"\nconst { extractQueries } = require(`../query/query-watcher`)\nconst requiresWriter = require(`./requires-writer`)\nimport { writeRedirects, startRedirectListener } from \"./redirects-writer\"\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// import \"./log-line-function\"\n\ntype BootstrapArgs = {\n  directory: string,\n  prefixPaths?: boolean,\n  parentSpan: Object,\n}\n\nmodule.exports = async (args: BootstrapArgs) => {\n  const spanArgs = args.parentSpan ? { childOf: args.parentSpan } : {}\n  const bootstrapSpan = tracer.startSpan(`bootstrap`, spanArgs)\n\n  /* Time for a little story...\n   * When running `gatsby develop`, the globally installed gatsby-cli starts\n   * and sets up a Redux store (which is where logs are now stored). When gatsby\n   * finds your project's locally installed gatsby-cli package in node_modules,\n   * it switches over. This instance will have a separate redux store. We need to\n   * ensure that the correct store is used which is why we call setStore\n   * (/packages/gatsby-cli/src/reporter/redux/index.js)\n   *\n   * This function\n   * - copies over the logs from the global gatsby-cli to the local one\n   * - sets the store to the local one (so that further actions dispatched by\n   * the global gatsby-cli are handled by the local one)\n   */\n  if (args.setStore) {\n    args.setStore(store)\n  }\n\n  // Start plugin runner which listens to the store\n  // and invokes Gatsby API based on actions.\n  startPluginRunner()\n\n  startRedirectListener()\n\n  const directory = slash(args.directory)\n\n  const program = {\n    ...args,\n    browserslist: getBrowsersList(directory),\n    // Fix program directory path for windows env.\n    directory,\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  let activityForJobs\n\n  emitter.on(`CREATE_JOB`, () => {\n    if (!activityForJobs) {\n      activityForJobs = reporter.phantomActivity(`Running jobs`)\n      activityForJobs.start()\n    }\n  })\n\n  const onEndJob = () => {\n    if (activityForJobs && store.getState().jobs.active.length === 0) {\n      activityForJobs.end()\n      activityForJobs = null\n    }\n  }\n\n  emitter.on(`END_JOB`, onEndJob)\n\n  // Try opening the site's gatsby-config.js file.\n  let activity = reporter.activityTimer(`open and validate gatsby-configs`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const { configModule, configFilePath } = await getConfigFile(\n    program.directory,\n    `gatsby-config`\n  )\n  let config = preferDefault(configModule)\n\n  // The root config cannot be exported as a function, only theme configs\n  if (typeof config === `function`) {\n    reporter.panic({\n      id: `10126`,\n      context: {\n        configName: `gatsby-config`,\n        path: program.directory,\n      },\n    })\n  }\n\n  // theme gatsby configs can be functions or objects\n  if (config && config.__experimentalThemes) {\n    reporter.warn(\n      `The gatsby-config key \"__experimentalThemes\" has been deprecated. Please use the \"plugins\" key instead.`\n    )\n    const themes = await loadThemes(config, {\n      useLegacyThemes: true,\n      configFilePath,\n      rootDir: program.directory,\n    })\n    config = themes.config\n\n    store.dispatch({\n      type: `SET_RESOLVED_THEMES`,\n      payload: themes.themes,\n    })\n  } else if (config) {\n    const plugins = await loadThemes(config, {\n      useLegacyThemes: false,\n      configFilePath,\n      rootDir: program.directory,\n    })\n    config = plugins.config\n  }\n\n  if (config && config.polyfill) {\n    reporter.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  store.dispatch(internalActions.setSiteConfig(config))\n\n  activity.end()\n\n  // run stale jobs\n  store.dispatch(removeStaleJobs(store.getState()))\n\n  activity = reporter.activityTimer(`load plugins`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const flattenedPlugins = await loadPlugins(config, program.directory)\n  activity.end()\n\n  // Multiple occurrences of the same name-version-pair can occur,\n  // so we report an array of unique pairs\n  const pluginsStr = _.uniq(flattenedPlugins.map(p => `${p.name}@${p.version}`))\n  telemetry.decorateEvent(`BUILD_END`, {\n    plugins: pluginsStr,\n  })\n\n  telemetry.decorateEvent(`DEVELOP_STOP`, {\n    plugins: pluginsStr,\n  })\n\n  // onPreInit\n  activity = reporter.activityTimer(`onPreInit`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span })\n  activity.end()\n\n  // During builds, delete html and css files from the public directory as we don't want\n  // deleted pages and styles from previous builds to stick around.\n  if (\n    !process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES &&\n    process.env.NODE_ENV === `production`\n  ) {\n    activity = reporter.activityTimer(\n      `delete html and css files from previous builds`,\n      {\n        parentSpan: bootstrapSpan,\n      }\n    )\n    activity.start()\n    await del([\n      `public/**/*.{html,css}`,\n      `!public/page-data/**/*`,\n      `!public/static`,\n      `!public/static/**/*.{html,css}`,\n    ])\n    activity.end()\n  }\n\n  activity = reporter.activityTimer(`initialize cache`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const hashes = await Promise.all([\n    !!process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES,\n    md5File(`package.json`),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-config.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-node.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n  ])\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n  const state = store.getState()\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    reporter.info(reporter.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's no stale data.\n    `)\n  }\n  const cacheDirectory = `${program.directory}/.cache`\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash) {\n    try {\n      // Attempt to empty dir if remove fails,\n      // like when directory is mount point\n      await fs.remove(cacheDirectory).catch(() => fs.emptyDir(cacheDirectory))\n    } catch (e) {\n      reporter.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  await fs.ensureDir(cacheDirectory)\n\n  // Ensure the public/static directory\n  await fs.ensureDir(`${program.directory}/public/static`)\n\n  activity.end()\n\n  activity = reporter.activityTimer(`copy gatsby files`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = cacheDirectory\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir, {\n      clobber: true,\n    })\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`, {\n      clobber: true,\n    })\n    await fs.ensureDirSync(`${cacheDirectory}/json`)\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${cacheDirectory}/fragments`)\n  } catch (err) {\n    reporter.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin) => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n\n    // Always include gatsby-browser.js files if they exist as they're\n    // a handy place to include global styles and other global imports.\n    try {\n      if (env === `browser`) {\n        return slash(\n          require.resolve(path.join(plugin.resolve, `gatsby-${env}`))\n        )\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      return slash(path.join(plugin.resolve, `gatsby-${env}`))\n    }\n    return undefined\n  }\n\n  const ssrPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPluginsRequires = browserPlugins\n    .map(plugin => {\n      // we need a relative import path to keep contenthash the same if directory changes\n      const relativePluginPath = path.relative(siteDir, plugin.resolve)\n      return `{\n      plugin: require('${slash(relativePluginPath)}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    })\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    reporter.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = reporter.activityTimer(`onPreBootstrap`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`, {\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  // Prepare static schema types\n  activity = reporter.activityTimer(`createSchemaCustomization`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await createSchemaCustomization({\n    parentSpan: bootstrapSpan,\n  })\n  activity.end()\n\n  // Source nodes\n  activity = reporter.activityTimer(`source and transform nodes`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../utils/source-nodes`).default({ parentSpan: activity.span })\n  reporter.verbose(\n    `Now have ${store.getState().nodes.size} nodes with ${\n      store.getState().nodesByType.size\n    } types: [${[...store.getState().nodesByType.entries()]\n      .map(([type, nodes]) => type + `:` + nodes.size)\n      .join(`, `)}]`\n  )\n  activity.end()\n\n  // Create Schema.\n  activity = reporter.activityTimer(`building schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`).build({ parentSpan: activity.span })\n  activity.end()\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.mjs`, `.js`, `.jsx`, `.wasm`, `.json`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan: bootstrapSpan,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const graphqlRunner = createGraphQLRunner(store, reporter)\n\n  // Collect pages.\n  activity = reporter.activityTimer(`createPages`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(\n    `createPages`,\n    {\n      graphql: graphqlRunner,\n      traceId: `initial-createPages`,\n      waitForCascadingActions: true,\n      parentSpan: activity.span,\n    },\n    { activity }\n  )\n  reporter.verbose(\n    `Now have ${store.getState().nodes.size} nodes with ${\n      store.getState().nodesByType.size\n    } types, and ${\n      store.getState().nodesByType?.get(`SitePage`).size\n    } SitePage nodes`\n  )\n  activity.end()\n\n  // A variant on createPages for plugins that want to\n  // have full control over adding/removing pages. The normal\n  // \"createPages\" API is called every time (during development)\n  // that data changes.\n  activity = reporter.activityTimer(`createPagesStatefully`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(\n    `createPagesStatefully`,\n    {\n      graphql: graphqlRunner,\n      traceId: `initial-createPagesStatefully`,\n      waitForCascadingActions: true,\n      parentSpan: activity.span,\n    },\n    {\n      activity,\n    }\n  )\n  activity.end()\n\n  activity = reporter.activityTimer(`onPreExtractQueries`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreExtractQueries`, { parentSpan: activity.span })\n  activity.end()\n\n  // Update Schema for SitePage.\n  activity = reporter.activityTimer(`update schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`).rebuildWithSitePage({ parentSpan: activity.span })\n  activity.end()\n\n  await extractQueries({ parentSpan: bootstrapSpan })\n\n  // Write out files.\n  activity = reporter.activityTimer(`write out requires`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  try {\n    await requiresWriter.writeAll(store.getState())\n  } catch (err) {\n    reporter.panic(`Failed to write out requires`, err)\n  }\n  activity.end()\n\n  // Write out redirects.\n  activity = reporter.activityTimer(`write out redirect data`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await writeRedirects()\n  activity.end()\n\n  activity = reporter.activityTimer(`onPostBootstrap`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPostBootstrap`, { parentSpan: activity.span })\n  activity.end()\n\n  reporter.log(``)\n  reporter.info(`bootstrap finished - ${process.uptime().toFixed(3)} s`)\n  reporter.log(``)\n  emitter.emit(`BOOTSTRAP_FINISHED`)\n  require(`../redux/actions`).boundActionCreators.setProgramStatus(\n    `BOOTSTRAP_FINISHED`\n  )\n\n  bootstrapSpan.finish()\n\n  return { graphqlRunner }\n}\n"],"file":"index.js"}