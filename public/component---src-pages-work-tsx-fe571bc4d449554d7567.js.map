{"version":3,"sources":["webpack:///./src/pages/work.tsx"],"names":["ImageContainer","styled","div","Description","WorkContainer","article","WorkPage","workData","allWorkJson","nodes","title","map","work","img","require","key","company","src","alt","positions","position","duration","from","to","description"],"mappings":"wLAQMA,EAAiBC,UAAOC,IAAV,2EAAGD,CAAH,0EAQdE,EAAcF,UAAOC,IAAV,wEAAGD,CAAH,4LAcXG,EAAgBH,UAAOI,QAAV,0EAAGJ,CAAH,oRAefD,EAMIG,GA8DOG,UAvDE,WAAM,IAEGC,EAFH,OAEnBC,YAAeC,MAwBjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,KACE,oCACCH,EAASI,KAAI,SAACC,GACb,IAAMC,EAAMC,UAAQ,KAAaF,EAAKC,KACtC,OACE,kBAACT,EAAD,CAAeW,IAAKH,EAAKI,SACvB,kBAAChB,EAAD,KACE,yBAAKiB,IAAKJ,EAAKK,IAAKN,EAAKI,WAE3B,gCACE,4BAAKJ,EAAKO,UAAU,GAAGC,UACvB,4BAAKR,EAAKI,SACV,gCACGJ,EAAKS,SAASC,KACd,MACAV,EAAKS,SAASE,KAGnB,kBAACpB,EAAD,KAAcS,EAAKY","file":"component---src-pages-work-tsx-fe571bc4d449554d7567.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { HCenteredSection } from \"../styled/HCenteredSection\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport { Work } from \"../types\";\n\nconst ImageContainer = styled.div`\n  margin-right: 0.5rem;\n  & img {\n    width: 100%;\n    height: auto;\n    border-radius: 4px;\n  }\n`;\nconst Description = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 0.5rem;\n  box-sizing: border-box;\n  margin: 0 !important;\n  background: rgba(50, 50, 50, 0.95);\n  transition: all ease 200ms;\n  opacity: 0;\n}\n`;\nconst WorkContainer = styled.article`\n  padding: 0 0.5rem;\n  margin: 1rem -0.5rem;\n  border: 1px solid rgba(100, 100, 100, 0.7);\n  border-radius: 0.25rem;\n  display: flex;\n  position: relative;\n  overflow: hidden;\n\n  & > * {\n    flex: 1 auto;\n    margin-top: 0.5rem;\n    margin-bottom: 0.5rem;\n  }\n\n  ${ImageContainer} {\n    min-width: 80px;\n    max-width: 80px;\n  }\n\n  &:hover {\n    & ${Description} {\n      top: 0%;\n      opacity: 1;\n    }\n  }\n`;\n\nconst WorkPage = () => {\n  const {\n    allWorkJson: { nodes: workData },\n  } = useStaticQuery(\n    graphql`\n      query {\n        allWorkJson {\n          nodes {\n            img\n            location\n            company\n            positions {\n              from\n              position\n            }\n            duration {\n              from(formatString: \"MMM, Y\")\n              to(formatString: \"MMM, Y\")\n            }\n            description\n          }\n        }\n      }\n    `\n  );\n\n  return (\n    <Layout>\n      <SEO title=\"Work\" />\n      <HCenteredSection>\n        <h2>Work</h2>\n        {workData.map((work: Work) => {\n          const img = require(`../images/${work.img}`);\n          return (\n            <WorkContainer key={work.company}>\n              <ImageContainer>\n                <img src={img} alt={work.company} />\n              </ImageContainer>\n              <header>\n                <h2>{work.positions[0].position}</h2>\n                <h3>{work.company}</h3>\n                <strong>\n                  {work.duration.from}\n                  {\" - \"}\n                  {work.duration.to}\n                </strong>\n              </header>\n              <Description>{work.description}</Description>\n            </WorkContainer>\n          );\n        })}\n      </HCenteredSection>\n    </Layout>\n  );\n};\nexport default WorkPage;\n"],"sourceRoot":""}